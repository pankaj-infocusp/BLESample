// Generated by view binder compiler. Do not edit!
package breon.telematics.loneworkersafetyapp.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import breon.telematics.loneworkersafetyapp.android.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAboutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnPolicy;

  @NonNull
  public final AppCompatButton btnToken;

  @NonNull
  public final AppCompatButton btnWebsite;

  @NonNull
  public final CircularProgressIndicator circularLoader;

  @NonNull
  public final CircularProgressIndicator circularLoader1;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final AppCompatImageView ivAppLogo;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvPhone;

  @NonNull
  public final TextView tvResponse;

  @NonNull
  public final TextView tvRights;

  @NonNull
  public final TextView tvToken;

  @NonNull
  public final TextView tvVersion;

  private FragmentAboutBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnPolicy, @NonNull AppCompatButton btnToken,
      @NonNull AppCompatButton btnWebsite, @NonNull CircularProgressIndicator circularLoader,
      @NonNull CircularProgressIndicator circularLoader1, @NonNull Guideline guideline,
      @NonNull AppCompatImageView ivAppLogo, @NonNull TextView tvDescription,
      @NonNull TextView tvEmail, @NonNull TextView tvPhone, @NonNull TextView tvResponse,
      @NonNull TextView tvRights, @NonNull TextView tvToken, @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.btnPolicy = btnPolicy;
    this.btnToken = btnToken;
    this.btnWebsite = btnWebsite;
    this.circularLoader = circularLoader;
    this.circularLoader1 = circularLoader1;
    this.guideline = guideline;
    this.ivAppLogo = ivAppLogo;
    this.tvDescription = tvDescription;
    this.tvEmail = tvEmail;
    this.tvPhone = tvPhone;
    this.tvResponse = tvResponse;
    this.tvRights = tvRights;
    this.tvToken = tvToken;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPolicy;
      AppCompatButton btnPolicy = ViewBindings.findChildViewById(rootView, id);
      if (btnPolicy == null) {
        break missingId;
      }

      id = R.id.btnToken;
      AppCompatButton btnToken = ViewBindings.findChildViewById(rootView, id);
      if (btnToken == null) {
        break missingId;
      }

      id = R.id.btnWebsite;
      AppCompatButton btnWebsite = ViewBindings.findChildViewById(rootView, id);
      if (btnWebsite == null) {
        break missingId;
      }

      id = R.id.circularLoader;
      CircularProgressIndicator circularLoader = ViewBindings.findChildViewById(rootView, id);
      if (circularLoader == null) {
        break missingId;
      }

      id = R.id.circularLoader1;
      CircularProgressIndicator circularLoader1 = ViewBindings.findChildViewById(rootView, id);
      if (circularLoader1 == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.ivAppLogo;
      AppCompatImageView ivAppLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivAppLogo == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvPhone;
      TextView tvPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvPhone == null) {
        break missingId;
      }

      id = R.id.tvResponse;
      TextView tvResponse = ViewBindings.findChildViewById(rootView, id);
      if (tvResponse == null) {
        break missingId;
      }

      id = R.id.tvRights;
      TextView tvRights = ViewBindings.findChildViewById(rootView, id);
      if (tvRights == null) {
        break missingId;
      }

      id = R.id.tvToken;
      TextView tvToken = ViewBindings.findChildViewById(rootView, id);
      if (tvToken == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new FragmentAboutBinding((ConstraintLayout) rootView, btnPolicy, btnToken, btnWebsite,
          circularLoader, circularLoader1, guideline, ivAppLogo, tvDescription, tvEmail, tvPhone,
          tvResponse, tvRights, tvToken, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
