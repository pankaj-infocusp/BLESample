// Generated by view binder compiler. Do not edit!
package breon.telematics.loneworkersafetyapp.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import breon.telematics.loneworkersafetyapp.android.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnSignOn;

  @NonNull
  public final ConstraintLayout clSignOn;

  @NonNull
  public final LinearLayout clTabLayout;

  @NonNull
  public final ImageView ivNext;

  @NonNull
  public final TabLayout tablayout;

  @NonNull
  public final TextView tvDashboardAccess;

  @NonNull
  public final ViewPager2 viewpager;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnSignOn, @NonNull ConstraintLayout clSignOn,
      @NonNull LinearLayout clTabLayout, @NonNull ImageView ivNext, @NonNull TabLayout tablayout,
      @NonNull TextView tvDashboardAccess, @NonNull ViewPager2 viewpager) {
    this.rootView = rootView;
    this.btnSignOn = btnSignOn;
    this.clSignOn = clSignOn;
    this.clTabLayout = clTabLayout;
    this.ivNext = ivNext;
    this.tablayout = tablayout;
    this.tvDashboardAccess = tvDashboardAccess;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignOn;
      AppCompatButton btnSignOn = ViewBindings.findChildViewById(rootView, id);
      if (btnSignOn == null) {
        break missingId;
      }

      id = R.id.clSignOn;
      ConstraintLayout clSignOn = ViewBindings.findChildViewById(rootView, id);
      if (clSignOn == null) {
        break missingId;
      }

      id = R.id.clTabLayout;
      LinearLayout clTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (clTabLayout == null) {
        break missingId;
      }

      id = R.id.ivNext;
      ImageView ivNext = ViewBindings.findChildViewById(rootView, id);
      if (ivNext == null) {
        break missingId;
      }

      id = R.id.tablayout;
      TabLayout tablayout = ViewBindings.findChildViewById(rootView, id);
      if (tablayout == null) {
        break missingId;
      }

      id = R.id.tvDashboardAccess;
      TextView tvDashboardAccess = ViewBindings.findChildViewById(rootView, id);
      if (tvDashboardAccess == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager2 viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, btnSignOn, clSignOn,
          clTabLayout, ivNext, tablayout, tvDashboardAccess, viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
